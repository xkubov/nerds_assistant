[tool.poetry]
name = "nerd_assistant"
version = "0.1.0"
description = "ChatGPT Telegram Bot"
authors = ["Peter Kubov <xkubov@gmail.com>"]
readme = "README.md"
packages = [{include = "nerd_assistant"}]
[tool.poetry.scripts]
nerd_assistant = 'nerd_assistant.cli.main:app'

[tool.mypy]
plugins = [
    "pydantic.mypy",
]
ignore_missing_imports = true
disallow_untyped_calls = false
disallow_untyped_decorators = false
namespace_packages = true
warn_unused_ignores = true
disallow_untyped_defs = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.flake8]
max-line-length = 100

[tool.pylint."MESSAGES CONTROL"]
extension-pkg-whitelist = "pydantic"
disable = [
    "missing-function-docstring",
    "missing-module-docstring",
    "missing-class-docstring",
    "too-few-public-methods",
    "too-many-arguments",
    "redefined-outer-name",
    "invalid-name",
]

[tool.black]
line-length = 100
include = '\.pyi?$'

[tool.isort]
profile = "black"

[tool.poe.tasks]
_mypy = "mypy ."
_flake = "flake8 ."
_black = "black ."
_black_check = "black . --check"
_isort = "isort ."
_isort_check = "isort . --check-only"
_pylint = "pylint nerd_assistant"
format = ["_isort", "_black"]
format_check = ["_isort_check", "_black_check"]
lint = ["_mypy", "_flake", "_pylint"]
release = "bump2version"

[tool.pytest.ini_options]
addopts = "--mypy --black --isort --pylint --cov=nerd_assistant"

[tool.poetry.dependencies]
python = "^3.9"
typer = "^0.7.0"
chatgptpy = "^1.0.5"
python-telegram-bot = "20.0a0"

[tool.poetry.dev-dependencies]
black = "^22.10.0"
isort = "^5.10.1"
flake8 = "^5.0.4"
Flake8-pyproject = "^1.1.0.post0"
mypy = "^0.990"
poethepoet = "^0.16.4"
bump2version = "^1.0.1"
pytest = "^7.2.0"
pytest-asyncio = "^0.20.2"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
pytest-mypy = "^0.10.1"
pytest-black = "^0.3.12"
pytest-flake8 = "^1.1.1"
pytest-pylint = "^0.19.0"
pylint = "^2.15.5"
pylint-pydantic = "^0.1.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
